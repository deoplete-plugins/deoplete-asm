#!/usr/bin/env python3

import xml.dom.minidom
import urllib.request

from collections import OrderedDict

opcode_xml = urllib.request.urlopen('https://github.com/Maratyszcza/Opcodes/raw/master/opcodes/x86_64.xml')
domtree = xml.dom.minidom.parse(opcode_xml)
instructions = domtree.documentElement.getElementsByTagName('Instruction')

out = """# Generated by the tools/gen_goopcode.py. DO NOT EDIT!
# This conversion list acquired from https://github.com/Maratyszcza/Opcodes/raw/master/opcodes/x86_64.xml

class go(object):
    mnemonics = dict({
"""
d = OrderedDict()
for instruction in instructions:
    instruction_form = instruction.getElementsByTagName('InstructionForm')
    for ins in instruction_form:
        go = ins.getAttribute('go-name')
        if go and not d.get(go):
            gas = ins.getAttribute('gas-name')
            d[go] = gas

for go, gas in d.items():
    out += "        '{}': '{}',\n".format(gas, go)

out += '    })'
print(out)
