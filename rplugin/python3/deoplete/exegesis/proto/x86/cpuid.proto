// Copyright 2017 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Contains definitions of protos for storing the output of the x86-64 CPUID
// instruction. Each leaf/subleaf combination is stored in a separate
// CpuIdEntryProto message; the whole dump is a collection of such entries.

syntax = "proto3";

package exegesis.x86;

// Contains the input of the CPUID instruction.
message CpuIdInputProto {
  // The number of the requested leaf (the value of the EAX register).
  uint32 leaf = 1;

  // The number of the requested subleaf or 0, if the given leaf does not have
  // subleafs (the value of the ECX register).
  uint32 subleaf = 2;
}

// Contains the output of the CPUID instruction. The fields of the proto
// directly correspond to the output registers set by CPUID.
message CpuIdOutputProto {
  uint32 eax = 1;
  uint32 ebx = 2;
  uint32 ecx = 3;
  uint32 edx = 4;
}

// Represents a single input/output pair of the CPUID data.
message CpuIdEntryProto {
  CpuIdInputProto input = 1;
  CpuIdOutputProto output = 2;
}

// Represents the full CPUID dump. Contains the collection of all input/output
// pairs of the CPU.
message X86CpuIdDumpProto {
  repeated CpuIdEntryProto entries = 1;
}
